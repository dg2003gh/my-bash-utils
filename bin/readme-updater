#!/usr/bin/env bash

#title          : readme-updater
#description	: Updates a git repository README.md with file header information everytime a it is added.
#author         : Douglas Guimar√£es
#date		: 01-05-2024
#version        : 1.1.0
#GNU bash    	: 5.2.21
#=======================================================================================

workdir='/home/dg2003/Documentos/my-bash-utils/'
keywords=('^#title' '^#description' '^#date' '^#version' '^#GNU bash')
output_file="${workdir}README.md"
readme_header=''

function GET_README_HEADER() {
    readme_header="$(head -n $1 $output_file)\n\n"
}

function CREATE_TABLE() {
    local final_table=()

    keywords="${keywords[@]//*/&\|}"
    keywords="${keywords%|}"
    keywords="${keywords//\|[[:space:]]/\|}"
    
    readarray  -d ':' _result_list < <(grep -Erih  "${keywords}"  "${workdir}")

    final_table[0]="${keywords//[[:punct:]]/\|}" # Table header
    final_table[0]="|${final_table[0]//\|\|}|"

    final_table[1]="\n${final_table[0]//[[:alnum:]]/-}\n" # Table header divisor
    final_table[1]="${final_table[1]//[[:space:]]/-}"

    _result_list=("${_result_list[@]//[[:space:]]#title*/|\\n|}") # Table content
    final_table[2]="${_result_list[@]//\#*/\|}|" 

    echo -en "${readme_header}" ${final_table[@]} > $output_file
}

function _HELP() {
    echo \
    '
    Usage: readme-updater [Option...] [Argument...]

    Description:

	A command that search a list of pattern in files from a given directory
	and make a markdown file with a table that contains the search return. 

    Options:
	
	-h	Display this help.
	-k	Specify which keywords should be search. [Separate by space] 
	-l	Specify the line that the table should be started. [Default is line 27]
	-o	Specify the output file.
	-w	Specify the workdir, which directory keywords should be search in files.
	
    Exemple:

	README-UPDATER -w $HOME/Documents/Scripts -k "^#title ^#Description ^#last-update" -o $HOME/README.md 
    '
    exit 0
}

function OPTION_NOT_FOUND_MESSAGE() {
    echo -e "-${1} \033[31moption doesn't exist or need an argument.\033[0m" 
    exit 1
} 

while getopts ':hw:k:o:l:' option; do 
    case $option in 
	h)  _HELP				;;
	k)  keywords=($OPTARG)			;;
	l)  GET_README_HEADER "$OPTARG"		;;
	o)  output_file="$OPTARG"		;;
	w)  workdir="$OPTARG"			;;
	\?) OPTION_NOT_FOUND_MESSAGE "$OPTARG"	;;
    esac
done

CREATE_TABLE
